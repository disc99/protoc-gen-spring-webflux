buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:5.1.0"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.2.RELEASE"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"
    }
}

allprojects {
    group = 'io.protobufx'
    version = System.getenv('CIRCLE_TAG') ?: System.getenv('CIRCLE_BRANCH') ?: 'local'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

project('plugin') {
    apply plugin: 'java'
    apply plugin: 'application'
    apply plugin: 'idea'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    sourceCompatibility = JavaVersion.VERSION_1_8

    dependencies {
        implementation 'com.google.protobuf:protobuf-java:3.6.1'
        implementation 'com.google.protobuf:protobuf-java-util:3.6.1'
        implementation 'com.google.api.grpc:proto-google-common-protos:1.17.0'
        implementation 'com.github.jknack:handlebars:4.1.2'
        implementation 'org.apache.commons:commons-lang3:3.9'
        implementation 'com.google.googlejavaformat:google-java-format:1.7'
        implementation 'org.apache.logging.log4j:log4j-api:2.12.1'
        implementation 'org.apache.logging.log4j:log4j-core:2.12.1'

        testRuntime 'org.junit.platform:junit-platform-launcher:1.4.2'
        testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
        testRuntime 'org.junit.vintage:junit-vintage-engine:5.4.2'
    }

    // Define the main class for the application
    mainClassName = 'io.protobufx.protoc.gen.spring.Main'

    jar {
        manifest {
            attributes "Main-Class" : "io.protobufx.protoc.gen.spring.Main"
            attributes 'Multi-Release': 'true'
        }
    }

    shadowJar {
        archiveBaseName = 'protoc-gen-spring-webflux'
        classifier = null
    }

    task sourceJar(type: Jar) {
        archiveBaseName = 'protoc-gen-spring-webflux'
        from sourceSets.main.allSource
        archiveClassifier = 'sources'
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveBaseName = 'protoc-gen-spring-webflux'
        archiveClassifier = 'javadoc'
        from javadoc.destinationDir
    }

    task linuxExe(type: Jar) {
        archiveBaseName = 'protoc-gen-spring-webflux'
        archiveClassifier = 'linux-x86_64'
        archiveExtension = 'exe'
        dependsOn(shadowJar)
        doLast {
            File file = linuxExe.archivePath
            file.delete()
            file.createNewFile()
            file.executable = true
            file << "#!/bin/bash\nexec java -jar \$0\n"
            file << shadowJar.archivePath.bytes
        }
    }

    task osxExe(type: Jar) {
        archiveBaseName = 'protoc-gen-spring-webflux'
        archiveClassifier = 'osx-x86_64'
        archiveExtension = 'exe'
        dependsOn(shadowJar)
        doLast {
            File file = osxExe.archivePath
            file.delete()
            file.createNewFile()
            file.executable = true
            file << "#!/bin/bash\nexec java -jar \$0\n"
            file << shadowJar.archivePath.bytes
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId 'protoc-gen-spring-webflux'
                artifact shadowJar
                artifact sourceJar
                artifact javadocJar
                artifact linuxExe
                artifact osxExe
            }
        }
    }

    bintray {
        user = System.getenv('BINTRAY_USER')
        key = System.getenv('BINTRAY_KEY')
        publications = ['mavenJava']
        publish = true
        pkg {
            repo = 'maven'
            userOrg = 'protocol-buffers-extensions'
            name = 'protoc-gen-spring-webflux'
            websiteUrl = 'https://github.com/protocol-buffers-extensions/protoc-gen-spring-webflux'
            issueTrackerUrl = 'https://github.com/protocol-buffers-extensions/protoc-gen-spring-webflux/issues'
            vcsUrl = 'https://github.com/protocol-buffers-extensions/protoc-gen-spring-webflux.git'
            licenses = ['MIT']
            publicDownloadNumbers = true
            version {
                name = project.version
                vcsTag = project.version
            }
        }
    }
}

project('example') {
    apply plugin: 'java'
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'com.google.protobuf'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-json'
        implementation 'io.github.lognet:grpc-spring-boot-starter:3.1.0'
        implementation "io.grpc:grpc-netty:1.23.0"
        implementation "io.grpc:grpc-protobuf:1.23.0"
        implementation "io.grpc:grpc-stub:1.23.0"

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude module: 'junit'
        }
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    }


    protobuf {
        protoc {
            artifact = "com.google.protobuf:protoc:3.8.0"
        }
        plugins {
            grpc {
                artifact = 'io.grpc:protoc-gen-grpc-java:1.21.0'
            }
            webflux {
                artifact = 'io.protobufx:protoc-gen-spring-webflux:local'
            }
        }
        generateProtoTasks {
            all()*.plugins {
                grpc {}
                webflux {
                    option 'style=rest'
                }
            }
        }
    }

    sourceSets {
        main {
            java {
                srcDirs 'build/generated/source/proto/main/grpc'
                srcDirs 'build/generated/source/proto/main/java'
                srcDirs 'build/generated/source/proto/main/webflux'
            }
        }
    }
}

