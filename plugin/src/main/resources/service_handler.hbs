public static class {{serviceName}}Handler {

    private {{package}}.{{serviceName}}Grpc.{{serviceName}}ImplBase service;

    public {{serviceName}}Handler({{package}}.{{serviceName}}Grpc.{{serviceName}}ImplBase service) {
        this.service = service;
    }

    public Mono<ServerResponse> handleAll(ServerRequest serverRequest) {

        {{#methods}}
            {{#if isRest}}
                if (RequestPredicates.method({{methodType}}).and(RequestPredicates.path("{{path}}")).test(serverRequest)) {
                    return {{restMethodName}}(serverRequest);
                }
            {{else}}
                if (RequestPredicates.method(HttpMethod.POST).and(RequestPredicates.path("/{{packageProto}}.{{serviceName}}/{{methodProto}}")).test(serverRequest)) {
                    return {{restMethodName}}(serverRequest);
                }
            {{/if}}
        {{/methods}}

        throw new ResponseStatusException(HttpStatus.NOT_FOUND);
    }

    {{#handleMethodDefinitions}}{{.}}{{/handleMethodDefinitions}}
}
