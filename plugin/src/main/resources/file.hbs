// Generated by the {{pluginName}} compiler plugin.  DO NOT EDIT!
// source: {{protoSourceName}}
package {{pkgName}};

{{imports}}

@javax.annotation.Generated(
        value = "by {{pluginName}} compiler plugin",
        comments = "Source: {{protoSourceName}}")
public class {{outerClassName}} {

    {{#serviceCode}}{{.}}{{/serviceCode}}

    static class ReactiveStreamObserver<T> implements StreamObserver<T>, Publisher<T> {
        Subscriber<? super T> subscriber;

        @Override
        public void onNext(T value) {
            subscriber.onNext(value);
        }

        @Override
        public void onError(Throwable t) {
            subscriber.onError(t);
        }

        @Override
        public void onCompleted() {
            subscriber.onComplete();
        }

        @Override
        public void subscribe(Subscriber<? super T> s) {
            this.subscriber = s;
            this.subscriber.onSubscribe(new BaseSubscriber<T>() {});
        }
    }
}
